<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off"
	  internalLogFile="c:\temp\nlog-internal.log">
	<!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->

	<!--时间精度1ms-->
	<time xsi:type="FastLocal"/>
	<!--自定义全局变量-->
	<variable name="logdir" value="${basedir}/Log"/>

	<targets>
		<!-- Write events to a file with the date in the filename. and user async   -->
		<!--单个文件最大 archiveAboveSize = 10M-->
		<!--layout="[${longdate}] [Thread:${threadid}] [${callsite:className=True:includeNamespace=False:includeSourcePath=False:methodName=True}: ${callsite-linenumber}] [${uppercase:${level:padding=5}}] ${message} ${exception:format=ToString}"-->
		<target xsi:type="AsyncWrapper" name="fileLoggerAsync" queueLimit="10000" overflowAction="Grow">
			<target xsi:type="File" name="fileLogger" fileName="${logdir}/${date:format=yyyy-MM-dd}.log"
					layout="[${uppercase:${level:padding=5}}] [${longdate}] [Thread:${threadid:padding=2}] [${callsite:className=True:includeNamespace=False:includeSourcePath=False:methodName=True:skipFrames=0}:${callsite-linenumber:skipFrames=0}]: ${message} ${exception:format=ToString}"
					concurrentWrites="false"
					keepFileOpen="true"
					openFileCacheTimeout="10"
					archiveAboveSize="20971520"
					maxArchiveFiles="100"
					autoFlush="false"
					openFileFlushTimeout="1" />
		</target>

		<target xsi:type="AsyncWrapper" name="fileErrorLoggerAsync" queueLimit="10000" overflowAction="Discard">
			<target xsi:type="File" name="fileErrorLogger" fileName="${logdir}/Error/${date:format=yyyy-MM-dd}.log"
					layout="[${uppercase:${level:padding=5}}] [${longdate}] [Thread:${threadid:padding=2}] [${callsite:className=True:includeNamespace=False:includeSourcePath=False:methodName=True:skipFrames=0}:${callsite-linenumber:skipFrames=0}]: ${message} ${exception:format=ToString}"
					concurrentWrites="false"
					keepFileOpen="true"
					openFileCacheTimeout="10"
					archiveAboveSize="10485760"
					maxArchiveFiles="100"
					autoFlush="false"
					openFileFlushTimeout="1" />
		</target>

		<target xsi:type="ColoredConsole" name="colorConsoleLogger"
				layout="[${uppercase:${level:padding=5}}] [${longdate}] [Thread:${threadid:padding=2}] [${callsite:className=True:includeNamespace=False:includeSourcePath=False:methodName=True:skipFrames=0}:${callsite-linenumber:skipFrames=0}]: ${message} ${exception:format=ToString}"
				detectConsoleAvailable="true" />

		<target xsi:type="Debugger" name="debugLogger"
				layout="[${uppercase:${level:padding=5}}] [${longdate}] [Thread:${threadid:padding=2}] [${callsite:className=True:includeNamespace=False:includeSourcePath=False:methodName=True:skipFrames=0}:${callsite-linenumber:skipFrames=0}]: ${message} ${exception:format=ToString}" />
		<target xsi:type="RichTextBox" name="TextBoxLogger" layout="${longdate} ${level} ${message}" controlName="LogRichTextBox" formName="Home" />

		<!--<target xsi:type="Database" name="dbLogger"
            keepConnection="false"
            useTransactions="false"
            dbProvider="System.Data.SQLite.SQLiteConnection, System.Data.SQLite, Version=1.0.110.0"
            connectionString="Data Source=${basedir}\nlogs\log.db3;Version=3;journal_mode=OFF;"
            commandType="Text">
      <commandText>
        CREATE TABLE IF NOT EXISTS Log_${date:format=yyyyMMddHH} (
        timestamp   DATETIME NOT NULL,
        threadid    TEXT     NOT NULL,
        level       TEXT     NOT NULL,
        logger      TEXT     NOT NULL,
        callsite    TEXT     NOT NULL,
        line        TEXT     NOT NULL,
        message     TEXT     NOT NULL,
        exception   TEXT     NOT NULL);

        INSERT into Log_${date:format=yyyyMMddHH} (Timestamp,ThreadId, level, Logger, Callsite,Line, Message,Exception)
        values(@Timestamp,@ThreadId, @Level, @Logger, @Callsite,@Line, @Message,@Exception);
      </commandText>
      <parameter name="@Timestamp" layout="${longdate}"/>
      <parameter name="@ThreadId" layout="${threadid}"/>
      <parameter name="@Level" layout="${level:uppercase=true}"/>
      <parameter name="@Logger" layout="${logger}"/>
      <parameter name="@Callsite" layout=""/>
      <parameter name="@Line" layout=""/>
      <parameter name="@Message" layout="${message}"/>
      <parameter name="@Exception" layout="${exception:format=ToString}"/>
    </target>-->
	</targets>

	<rules>
		<logger name="*" minlevel="Debug" writeTo="fileLoggerAsync" enabled="true" />
		<logger name="*" minlevel="Error" writeTo="fileErrorLogger" enabled="true" />
		<logger name="*" minlevel="Debug" writeTo="debugLogger" enabled="true" final="true" />
		<logger name="*" minlevel="Debug"  writeTo="TextBoxLogger"/>
		<!--<logger name="*" minlevel="Debug" writeTo="dbLogger" enabled="false" />-->
	</rules>
</nlog>