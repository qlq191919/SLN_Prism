<Window x:Class="SLN_Prism.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:ext="clr-namespace:SLN_Prism.Extensions"
        Title="MainWindow"
        Width="1280"
        Height="800"
        prism:ViewModelLocator.AutoWireViewModel="True"
        AllowsTransparency="True"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="微软雅黑"
        TextElement.FontSize="13"
        TextElement.FontWeight="Regular"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="MyListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid>
                            <Border x:Name="borderHeader" />
                            <Border x:Name="border" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="borderHeader" Property="BorderThickness" Value="4,0,0,0" />
                                <Setter TargetName="borderHeader" Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                                <Setter TargetName="border" Property="Opacity" Value="0.2" />
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                                <Setter TargetName="border" Property="Opacity" Value="0.2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <materialDesign:DialogHost
        DialogTheme="Inherit"  x:Name="DialogHost"
        Identifier="Root" >
        <materialDesign:DrawerHost x:Name="drawerHost" IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="180">
                    <StackPanel Margin="0,30" DockPanel.Dock="Top">
                        <Image
                            Width="50"
                            Height="35"
                            Source="/Assets/Logo.png">
                            <!--<Image.Clip>
                                <EllipseGeometry
                                    Center="25,25"
                                    RadiusX="25"
                                    RadiusY="25" />
                            </Image.Clip>-->
                        </Image>
                        <TextBlock
                            Margin="0,10"
                            HorizontalAlignment="Center"
                            FontSize="14">
                           <Run Text="  "/> <!-- 添加制表符 -->
                           <Run Text="苏州索莱能"/>
                           <LineBreak/>
                           <Run Text="智能科技有限公司"/>
                        </TextBlock>

                    </StackPanel>

                    <ListBox
                        x:Name="menuBar"
                        ItemContainerStyle="{StaticResource MyListBoxItemStyle}"
                        ItemsSource="{Binding MenuBars}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NavigateCommand}" 
                                                       CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListBox}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Background="Transparent" Orientation="Horizontal">
                                    <materialDesign:PackIcon Margin="15,4,15,0"
                                                             Kind="{Binding Icon}" 
                                                              />
                                    <TextBlock Margin="10,0" 
                                               Text="{Binding Title}" 
                                                FontSize="14" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions> 

                <materialDesign:Snackbar x:Name="Snackbar" Panel.ZIndex="1" MessageQueue="{materialDesign:MessageQueue}"/>
                <materialDesign:ColorZone
                    x:Name="ColorZone"
                    Padding="16"
                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                    DockPanel.Dock="Top"
                    Mode="PrimaryMid">
                    <DockPanel LastChildFill="True">
                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                            <Button
                                x:Name="btnMin"
                                Content="—"
                                Style="{StaticResource MaterialDesignFlatMidBgButton}" />
                            <Button
                                x:Name="btnMax"
                                Content="☐"
                                Style="{StaticResource MaterialDesignFlatMidBgButton}" />
                            <Button
                                x:Name="btnClose"
                                Content="✕"
                                Style="{StaticResource MaterialDesignFlatMidBgButton}" />
                        </StackPanel>

                        <materialDesign:PopupBox DockPanel.Dock="Right">
                            <materialDesign:PopupBox.ToggleContent>
                                <Image
                                Width="30"
                                Height="30"
                                Source="/Assets/145.png">
                                    <Image.Clip>
                                        <EllipseGeometry
                                        Center="12.5,12.5"
                                        RadiusX="20"
                                        RadiusY="20" />
                                    </Image.Clip>
                                </Image>
                            </materialDesign:PopupBox.ToggleContent>

                            <StackPanel>
                                <!--<Button Command="{Binding AppCenterCommand}" Content="个人中心"/>-->
                                <Button Command="{Binding LoginOutCommand}" Content="注销当前账户"/>
                            </StackPanel>
                        </materialDesign:PopupBox>



                        <StackPanel Orientation="Horizontal">
                            <ToggleButton
                                x:Name="MenuToggleButton"
                                AutomationProperties.Name="HamburgerToggleButton"
                                IsChecked="False"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                            <Button
                                Margin="24,0,0,0"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                Command="{Binding GoBackCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                                                  Size=24}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                ToolTip="Previous Item" />

                            <Button
                                Margin="16,0,0,0"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                Command="{Binding GoForwardCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowRight,
                                                                  Size=24}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                ToolTip="Next Item" />

                            <TextBlock
                                Margin="16,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                AutomationProperties.Name="Material Design In XAML Toolkit"
                                FontSize="20"
                                Text="全功能探台测试设备" />
                        </StackPanel>
                    </DockPanel>
                </materialDesign:ColorZone>
                <ContentControl Grid.Row="1" prism:RegionManager.RegionName="{x:Static ext:PrismManager.MainViewRegionName}" />
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>

